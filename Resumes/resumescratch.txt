    \resumeSubheading
    {Graduate Teaching Assistant}{Mar 2022 - Jun 2022}
    {University of Oregon}{Eugene, OR}
    
    \begin{itemize}[label={$\diamond$}]
    \itemsep0em  %{description} [font=$\bullet$]
	\item {Instructed tutorials and labs for undergraduate physics courses on electricity and magnetism, circuitry, and Newtonian mechanics.}
	\item {Provided tutoring for undergraduate physics courses on Newtonian mechanics,
electricity and magnetism, statistical mechanics, and quantum mechanics.}
	\end{itemize} %{description}

% newpage


	
	
	\resumeSubheading
    {Library Student Assistant}{Sep 2017 - Jun 2022}
    {University of Oregon}{Eugene, OR}
    
    \begin{itemize}[label={$\diamond$}]
    \itemsep0em %{description} [font=$\bullet$]
	\item {Tutored library patrons in elementary algebra, calculus, differential equations,
linear algebra, partial differential equations, and physics.}
	\item {Trained library student employees on techniques for tutoring elementary and
advanced mathematical topics and concepts.}
	\item {Trained library student employees on library systems software and the Library of
Congress Classification system.}
	\item {Assisted library patrons with use of library services and systems.}
	\end{itemize} %{description}


	\begin{itemize}[label={$\diamond$}]
    \itemsep0em %{description} [font=$\bullet$]
	\item {\textbf{Modeling \& Simulation:} Molecular Dynamics, Monte Carlo, Markov State Modeling, General Particle Tracer, GROMACS, LAMMPS, PyMol}
	\item {\textbf{Machine Learning:} GLMs, PCA, t-ICA, LDA, QDA, KNN, Clustering, Autoencoders, CNNs}


5 years of scientific research and data analysis using Python and standard Python scientific computing libraries including NumPy, Pandas, Matplotlib, SciPy, Scikit-Learn, Tensorflow. 

Sometimes you have to work hard before you can work smart. If you have a problem that needs to be solved (especially in programming but this applies elsewhere too), it is often necessary to develop any solution that works before you try to develop an optimized solution. Sometimes this will require doing manually what could be done with automation - if you had time to automate. In corporate speech, this is sometimes referred to as the "minimum viable product". Once you have something that works at all, you can start to make it work smarter. 




1. DNA Coarse Grained Models:
Prior experiment work with DNA has shown that DNA undergoes "breathing fluctuations" when changing conformations for binging, replication, and transcription. The goal of this project was to develop a theoretical, coarse-grained model of DNA molecules from which one could recover these fluctuations. This is typically never done completely because conformational changes in macromolecules requires crossing an energy barrier. However, the energy landscapes in most coarse grained models either have a single minimum, or are non-linear and intractable.
This project required finding a suitable DNA molecule to simulate from the protein data bank (https://www.rcsb.org/), and running molecular dynamics simulations on a high performance computing platform (https://www.sdsc.edu/) and analyzing the simulation results to get parameters in the coarse grained model (https://en.wikipedia.org/wiki/Langevin_equation).
This project required writing bash scripts, Python, and Fortran code to analyze simulation data and run simulations. This project is still underway, but I am no longer the primary contributor. 

2.  Polymer Coarse Grained Models:
This work was similar to the work on DNA, but the models and theory are different. There are many people and companies who want to produce accurate simulations of large ensembles of organic polymers for development of novel materials, fuel sources, etc. However, simulations at atomic resolution are expensive and time consuming. Therefore, it is useful to develop a coase grained model which can be used to propagate simulation dynamics at lower resolutions, while retaining the physical attributes of the system. In this work, we were using simulation data to solve the Ornstein-Zernike equation (https://en.wikipedia.org/wiki/Ornstein%E2%80%93Zernike_equation) to acquire the pair-correlation function between coarse grained sites in the model. This work required very similar procedures and tools as the work on DNA.

3. Optimizing Focused Ion Beams:
Focused ion beams are used by semiconductor manufacturers for imaging, milling, and material deposition at scales of ~1um. Focused ion beams (FIBs) operate on the same principle as scanning electron microscropes, and the performance is primarily measured by the sharpness of the beam.
In almost all of these systems, the beams that are used are round. However, in some applications, circular symmetry of the beam is unnecessary, and better performance (higher sharpness) can be achieved using an elliptical aperture. The FIB is generated by a series of column elements such as apertures and lenses. Lens strengths in charged particle optics are defined by their voltages (https://en.wikipedia.org/wiki/Einzel_lens). In order to create an optimal beam, one must optimize the lens voltages and other elements in the FIB column.
The work I did involved running simulations of the FIB column on a linux HPC platform and analyzing the resulting data to find optimal conditions for each particular beam. This work required most Python data analysis, engineering of scientific software in Python and C, and communicating these results to more senior scientists to ensure viability and validity.
























	\end{itemize} %{description}








https://community.wolfram.com/groups/-/m/t/2030068


